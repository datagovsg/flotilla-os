{"info": {"version": "1.0.0", "description": "Flotilla server. Define your own integrations, clients, and workflows using the Flotilla API", "license": {"url": "http://www.apache.org/licenses/LICENSE-2.0.html", "name": "Apache 2.0"}, "title": "Flotilla"}, "paths": {"/v1/task/{definition_id}": {"put": {"responses": {"200": {"description": "successful operation", "schema": {"$ref": "#/definitions/Definition"}}, "400": {"description": "Malformed request"}, "404": {"description": "Definition not found"}}, "parameters": [{"required": true, "type": "string", "description": "Definition id of task definition to update", "in": "path", "name": "definition_id"}, {"required": true, "in": "body", "description": "Definition updates", "name": "body", "schema": {"$ref": "#/definitions/Definition"}}], "produces": ["application/json"], "operationId": "updateDefinition", "tags": ["task"], "consumes": ["application/json"], "summary": "Update task definition"}, "get": {"responses": {"200": {"description": "successful operation", "schema": {"$ref": "#/definitions/Definition"}}, "404": {"description": "Definition not found"}}, "parameters": [{"required": true, "type": "string", "description": "Definition id of task definition to get", "in": "path", "name": "definition_id"}], "produces": ["application/json"], "operationId": "getDefinition", "tags": ["task"], "summary": "Get task definition by id"}, "delete": {"responses": {"200": {"description": "successful operation"}, "404": {"description": "Definition not found"}}, "parameters": [{"required": true, "type": "string", "description": "Definition id of task definition to delete", "in": "path", "name": "definition_id"}], "produces": ["application/json"], "operationId": "deleteDefinition", "tags": ["task"], "summary": "Delete task definition by id"}}, "/v1/task/alias/{alias}/execute": {"put": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/Run"}}, "400": {"description": "Malformed request. Most typically this means an invalid image is used or the cluster cannot support running the job"}, "404": {"description": "Definition not found"}}, "parameters": [{"required": true, "type": "string", "description": "Alias to task definition to launch", "in": "path", "name": "alias"}, {"required": true, "in": "body", "description": "Launch parameters", "name": "body", "schema": {"$ref": "#/definitions/LaunchRequestV2"}}], "produces": ["application/json"], "operationId": "createRunByAlias", "tags": ["task"], "consumes": ["application/json"], "summary": "Create new task run by task alias"}}, "/v1/task": {"post": {"responses": {"400": {"description": "Malformed input"}, "409": {"description": "Another definition with the same alias exists"}, "200": {"description": "Definition created successfully"}}, "parameters": [{"required": true, "in": "body", "description": "Definition object to create", "name": "body", "schema": {"$ref": "#/definitions/Definition"}}], "produces": ["application/json"], "operationId": "createDefinition", "tags": ["task"], "consumes": ["application/json"], "summary": "Create a new task definition. Execute existing definitions with the execute endpoint"}, "get": {"responses": {"200": {"description": "successful operation", "schema": {"$ref": "#/definitions/DefinitionList"}}}, "parameters": [{"description": "Limit number of results to this many", "in": "query", "default": 1024, "required": false, "type": "integer", "name": "limit"}, {"description": "Page offset", "in": "query", "default": 0, "required": false, "type": "integer", "name": "offset"}, {"required": false, "type": "string", "description": "Filter to definitions with the specified group_name. Strict match.", "in": "query", "name": "group_name"}, {"required": false, "type": "string", "description": "Filter to those definitions with the specified alias. Substring match.", "in": "query", "name": "alias"}, {"required": false, "type": "string", "description": "Field on task definitions to sort by", "in": "query", "name": "sort_by"}, {"required": false, "type": "string", "description": "Sort order; (asc, desc)", "in": "query", "name": "order"}], "produces": ["application/json"], "operationId": "listDefinitions", "tags": ["task"], "summary": "List existing task definitions"}}, "/v4/task/{definition_id}/execute": {"put": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/Run"}}, "400": {"description": "Malformed request. Most typically this means an invalid image is used or the cluster cannot support running the job"}, "404": {"description": "Definition not found"}}, "parameters": [{"required": true, "type": "string", "description": "Definition id of task to launch", "in": "path", "name": "definition_id"}, {"required": true, "in": "body", "description": "Launch parameters", "name": "body", "schema": {"$ref": "#/definitions/LaunchRequestV4"}}], "produces": ["application/json"], "operationId": "createRunV4", "tags": ["task"], "consumes": ["application/json"], "summary": "Create new task run by definition id"}}, "/groups": {"get": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/GroupsList"}}}, "parameters": [{"description": "Limit results to this many", "in": "query", "default": 1024, "required": false, "type": "integer", "name": "limit"}, {"description": "Page offset", "in": "query", "default": 0, "required": false, "type": "integer", "name": "offset"}, {"required": false, "type": "string", "description": "Search for group names with this value", "in": "query", "name": "name"}], "produces": ["application/json"], "operationId": "getGroups", "tags": ["metadata"], "summary": "Get list of group names in use"}}, "/v1/task/alias/{alias}": {"get": {"responses": {"200": {"description": "successful operation", "schema": {"$ref": "#/definitions/Definition"}}, "404": {"description": "Definition not found"}}, "parameters": [{"required": true, "type": "string", "description": "Alias to task definition to get", "in": "path", "name": "alias"}], "produces": ["application/json"], "operationId": "getDefinitionByAlias", "tags": ["task"], "summary": "Get task definition by alias"}}, "/v1/task/{definition_id}/history": {"get": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/RunList"}}}, "parameters": [{"required": true, "type": "string", "description": "Definition id of runs to fetch", "in": "path", "name": "definition_id"}, {"description": "Limit number of results to this many", "in": "query", "default": 1024, "required": false, "type": "integer", "name": "limit"}, {"description": "Page offset", "in": "query", "default": 0, "required": false, "type": "integer", "name": "offset"}, {"required": false, "type": "string", "description": "Filter to runs with the specified cluster_name. Strict match.", "in": "query", "name": "cluster_name"}, {"required": false, "type": "string", "description": "Filter to those definitions with the specified status.", "in": "query", "name": "status"}], "produces": ["application/json"], "operationId": "listDefinitionRuns", "tags": ["history"], "summary": "List all runs for a given task definition id"}}, "/v1/history": {"get": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/RunList"}}}, "parameters": [{"description": "Limit number of results to this many", "in": "query", "default": 1024, "required": false, "type": "integer", "name": "limit"}, {"description": "Page offset", "in": "query", "default": 0, "required": false, "type": "integer", "name": "offset"}, {"required": false, "type": "string", "description": "Filter to runs with the specified cluster_name. Strict match.", "in": "query", "name": "cluster_name"}, {"required": false, "type": "string", "description": "Filter to those definitions with the specified status.", "in": "query", "name": "status"}], "produces": ["application/json"], "operationId": "listRuns", "tags": ["history"], "summary": "List all runs"}}, "/v1/{run_id}/logs": {"get": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/RunLogs"}}, "404": {"description": "No run with that run_id found"}}, "parameters": [{"required": true, "type": "string", "description": "Run id of run to get logs for", "in": "path", "name": "run_id"}, {"required": false, "type": "string", "description": "Last seen token (from a previous call to this endpoint). Allows only fetching logs that come after the specified `last_seen` token.", "in": "query", "name": "last_seen"}], "produces": ["application/json"], "operationId": "getLogs", "tags": ["history"], "summary": "Get logs for a run"}}, "/v1/task/{definition_id}/execute": {"put": {"responses": {"200": {"description": "successful operation", "schema": {"$ref": "#/definitions/Run"}}, "404": {"description": "Definition not found"}}, "parameters": [{"required": true, "type": "string", "description": "Definition id of task definition to launch", "in": "path", "name": "definition_id"}, {"required": true, "in": "body", "description": "Launch parameters", "name": "body", "schema": {"$ref": "#/definitions/LaunchRequestV1"}}], "produces": ["application/json"], "operationId": "createRun", "tags": ["task"], "consumes": ["application/json"], "summary": "Create new task run by definition id"}}, "/v2/task/{definition_id}/execute": {"put": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/Run"}}, "400": {"description": "Malformed request. Most typically this means an invalid image is used or the cluster cannot support running the job"}, "404": {"description": "Definition not found"}}, "parameters": [{"required": true, "type": "string", "description": "Definition id of task to launch", "in": "path", "name": "definition_id"}, {"required": true, "in": "body", "description": "Launch parameters", "name": "body", "schema": {"$ref": "#/definitions/LaunchRequestV2"}}], "produces": ["application/json"], "operationId": "createRunV2", "tags": ["task"], "consumes": ["application/json"], "summary": "Create new task run by definition id"}}, "/v1/task/{definition_id}/history/{run_id}": {"delete": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/Run"}}, "404": {"description": "No run found"}}, "parameters": [{"required": true, "type": "string", "description": "Definition id of run to terminate", "in": "path", "name": "definition_id"}, {"required": true, "type": "string", "description": "Run id of run to terminate", "in": "path", "name": "run_id"}], "produces": ["application/json"], "operationId": "stopRun", "tags": ["history"], "summary": "Terminate a run"}}, "/v1/history/{run_id}": {"get": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/Run"}}, "404": {"description": "No run found"}}, "parameters": [{"required": true, "type": "string", "description": "Run id of run to get", "in": "path", "name": "run_id"}], "produces": ["application/json"], "operationId": "getRun", "tags": ["history"], "summary": "Get run by run id"}}, "/tags": {"get": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/TagsList"}}}, "parameters": [{"description": "Limit results to this many", "in": "query", "default": 1024, "required": false, "type": "integer", "name": "limit"}, {"description": "Page offset", "in": "query", "default": 0, "required": false, "type": "integer", "name": "offset"}, {"required": false, "type": "string", "description": "Search for tags with this value", "in": "query", "name": "name"}], "produces": ["application/json"], "operationId": "getTags", "tags": ["metadata"], "summary": "Get list of tags in use"}}, "/clusters": {"get": {"responses": {"200": {"description": "Successful operation", "schema": {"$ref": "#/definitions/ClustersList"}}}, "parameters": [], "produces": ["application/json"], "operationId": "getClusters", "tags": ["metadata"], "summary": "Get list of clusters"}}}, "schemes": ["http"], "tags": [{"name": "task", "description": "Create, update, delete, and list task definitions"}, {"name": "history", "description": "View task run history"}, {"name": "metadata", "description": "Perform read-only metadata operations for tags, groups, and clusters"}], "basePath": "/api", "definitions": {"Definition": {"type": "object", "properties": {"tags": {"items": {"type": "string"}, "type": "array"}, "image": {"type": "string", "example": "library/ubuntu:latest"}, "group_name": {"type": "string", "example": "example"}, "definition_id": {"type": "string", "example": "definition-0a6aa31f-0221-4734-bc34-8054fab1820b"}, "alias": {"type": "string", "example": "my-job"}, "command": {"type": "string", "example": "echo 'hello world'"}, "env": {"items": {"$ref": "#/definitions/EnvVar"}, "type": "array"}, "memory": {"type": "integer", "description": "memory in units of megabytes", "example": 512}}}, "Run": {"type": "object", "properties": {"status": {"enum": ["RUNNING", "QUEUED", "NEEDS_RETRY", "PENDING", "STOPPED"], "type": "string", "example": "STOPPED"}, "cluster": {"type": "string", "example": "default"}, "finished_at": {"type": "string", "example": "2018-01-31T22:26:11.483Z", "format": "date-time"}, "image": {"type": "string", "example": "library/ubuntu:latest"}, "run_id": {"type": "string", "example": "553c2489-49af-4a68-4c8c-014bd95e6e30"}, "exit_code": {"type": "integer", "example": 0}, "group_name": {"type": "string", "example": "example"}, "definition_id": {"type": "string", "example": "definition-0a6aa31f-0221-4734-bc34-8054fab1820b"}, "instance": {"type": "object", "properties": {"instance_id": {"type": "string", "example": "i-8xx"}, "dns_name": {"type": "string", "example": "execution.host.dns"}}}, "alias": {"type": "string", "example": "my-job"}, "env": {"items": {"$ref": "#/definitions/EnvVar"}, "type": "array"}, "started_at": {"type": "string", "example": "2018-01-31T20:30:45.067Z", "format": "date-time"}}}, "RunList": {"type": "object", "properties": {"status": {"type": "string", "example": "STOPPED"}, "history": {"items": {"$ref": "#/definitions/Run"}, "type": "array"}, "limit": {"default": 1024, "type": "integer", "example": 1000}, "offset": {"default": 0, "type": "integer", "example": 0}, "total": {"type": "integer", "example": 100}, "order": {"default": "asc", "enum": ["asc", "desc"], "type": "string", "example": "asc"}, "sort_by": {"default": "alias", "type": "string", "example": "image"}}}, "LaunchRequestV1": {"type": "object", "properties": {"cluster": {"default": "default", "type": "string"}, "env": {"items": {"$ref": "#/definitions/EnvVar"}, "type": "array"}}}, "DefinitionList": {"type": "object", "properties": {"limit": {"default": 1024, "type": "integer", "example": 1024}, "offset": {"default": 0, "type": "integer", "example": 0}, "definitions": {"items": {"$ref": "#/definitions/Definition"}, "type": "array"}, "total": {"type": "integer", "example": 100}, "order": {"default": "asc", "enum": ["asc", "desc"], "type": "string", "example": "asc"}, "sort_by": {"default": "alias", "type": "string", "example": "alias"}}}, "GroupsList": {"type": "object", "properties": {"total": {"type": "integer", "example": 100}, "limit": {"default": 1024, "type": "integer", "example": 1024}, "groups": {"items": {"type": "string"}, "type": "array"}, "offset": {"default": 0, "type": "integer", "example": 0}}}, "LaunchRequestV2": {"type": "object", "properties": {"cluster": {"default": "default", "type": "string"}, "run_tags": {"type": "object", "properties": {"team_name": {"type": "string", "example": ":team:data_science"}, "owner_email": {"type": "string", "example": "flotilla@github.com"}}}, "env": {"items": {"$ref": "#/definitions/EnvVar"}, "type": "array"}}}, "ClustersList": {"type": "object", "properties": {"clusters": {"items": {"type": "string"}, "type": "array"}}}, "RunLogs": {"type": "object", "properties": {"log": {"type": "string", "example": "A\nB\nC"}, "last_seen": {"type": "string", "example": "f/123"}}}, "EnvVar": {"type": "object", "properties": {"name": {"type": "string", "example": "FOO"}, "value": {"type": "string", "example": "bar"}}}, "TagsList": {"type": "object", "properties": {"total": {"type": "integer", "example": 100}, "limit": {"default": 1024, "type": "integer", "example": 1024}, "offset": {"default": 0, "type": "integer", "example": 0}, "tags": {"items": {"type": "string"}, "type": "array"}}}, "LaunchRequestV4": {"type": "object", "properties": {"cluster": {"default": "default", "type": "string"}, "run_tags": {"type": "object", "properties": {"owner_id": {"type": "string", "example": ":user:flotilla"}}}, "env": {"items": {"$ref": "#/definitions/EnvVar"}, "type": "array"}}}}, "swagger": "2.0", "externalDocs": {"url": "https://github.com/stitchfix/flotilla-os", "description": "Find out more about flotilla"}}