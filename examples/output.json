{
    "Job": {
        "Stop": null,
        "Region": "ap-southeast-1",
        "Namespace": null,
        "ID": "zeppelin",
        "ParentID": null,
        "Name": "zeppelin",
        "Type": "service",
        "Priority": null,
        "AllAtOnce": null,
        "Datacenters": [
            "ap-southeast-1a",
            "ap-southeast-1b",
            "ap-southeast-1c"
        ],
        "Constraints": [
            {
                "LTarget": "${node.class}",
                "RTarget": "l-cloud-nomad-client",
                "Operand": "="
            }
        ],
        "TaskGroups": [
            {
                "Name": "zeppelin",
                "Count": 1,
                "Constraints": null,
                "Tasks": [
                    {
                        "Name": "zeppelin",
                        "Driver": "docker",
                        "User": "",
                        "Config": {
                            "args": [
                                "-c",
                                "set -euo pipefail; \\\ncat /tmp/spark-defaults-addons.conf \u003e\u003e ${SPARK_HOME}/conf/spark-defaults.conf; \\\nchown ${SPARK_USER} /zeppelin; \\\nmkdir -p /mnt/efs/zeppelin/notebook; \\\nmount --bind --make-rprivate /mnt/efs/zeppelin/notebook /zeppelin/notebook; \\\nmkdir -p /mnt/efs/locus; \\\nmount --bind --make-rprivate /mnt/efs/zeppelin/notebook /locus; \\\nexec bash /zeppelin/conf/run-zeppelin.sh; \\\n:\n"
                            ],
                            "command": "sh",
                            "dns_servers": [
                                "169.254.1.1"
                            ],
                            "force_pull": false,
                            "image": "registry.gahmen.tech/l/ldatabase-zeppelin:change-base",
                            "mounts": [
                                {
                                    "readonly": false,
                                    "source": "fs-87f150c6/",
                                    "target": "/mnt/efs",
                                    "volume_options": [
                                        {
                                            "driver_config": [
                                                {
                                                    "name": "efs"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "network_mode": "host",
                            "privileged": true,
                            "volumes": [
                                "alloc/spark-defaults.conf:/tmp/spark-defaults-addons.conf",
                                "secrets/hive-site.xml:/opt/spark/conf/hive-site.xml",
                                "alloc/shiro.ini.template:/zeppelin/conf/shiro.ini.template"
                            ]
                        },
                        "Constraints": null,
                        "Env": {
                            "MAPBOX_ACCESS_TOKEN": "pk.eyJ1Ijoic2xhaTExIiwiYSI6ImNqbm9mZW1xMDJncGQzcHE5bmticjlwMmEifQ.6g5hcv9mqdmtimMUUqoeDQ",
                            "NOMAD_ADDR": "https://nomad.locus.rocks",
                            "OAUTH2_CONFIG_CLIENT_ID": "",
                            "OAUTH2_CONFIG_SECRET": "",
                            "PUBLIC_SERVER": "https://zep.locus.rocks",
                            "SPARK_USER": "zeppelin",
                            "TZ": "Asia/Singapore"
                        },
                        "Services": [
                            {
                                "Id": "",
                                "Name": "${JOB}",
                                "Tags": [
                                    "traefik.enable=true",
                                    "traefik.frontend.rule=Host:zeppelin.locus.rocks",
                                    "traefik.frontend.entryPoints=internal",
                                    "traefik.frontend.headers.SSLRedirect=true",
                                    "traefik.frontend.headers.SSLProxyHeaders=X-Forwarded-Proto:https",
                                    "traefik.frontend.headers.STSSeconds=315360000",
                                    "traefik.frontend.headers.frameDeny=true",
                                    "traefik.frontend.headers.browserXSSFilter=true",
                                    "traefik.frontend.headers.contentTypeNosniff=true",
                                    "traefik.frontend.headers.referrerPolicy=strict-origin",
                                    "traefik.frontend.headers.contentSecurityPolicy=default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; connect-src 'self'; font-src 'self' data:;"
                                ],
                                "CanaryTags": null,
                                "PortLabel": "webui",
                                "AddressMode": "",
                                "Checks": [
                                    {
                                        "Id": "",
                                        "Name": "",
                                        "Type": "http",
                                        "Command": "",
                                        "Args": null,
                                        "Path": "/",
                                        "Protocol": "",
                                        "PortLabel": "",
                                        "AddressMode": "",
                                        "Interval": 10000000000,
                                        "Timeout": 2000000000,
                                        "InitialStatus": "",
                                        "TLSSkipVerify": false,
                                        "Header": null,
                                        "Method": "",
                                        "CheckRestart": {
                                            "Limit": 3,
                                            "Grace": 60000000000,
                                            "IgnoreWarnings": false
                                        },
                                        "GRPCService": "",
                                        "GRPCUseTLS": false
                                    }
                                ],
                                "CheckRestart": null
                            }
                        ],
                        "Resources": {
                            "CPU": 2000,
                            "MemoryMB": 4096,
                            "DiskMB": null,
                            "IOPS": null,
                            "Networks": [
                                {
                                    "Device": "",
                                    "CIDR": "",
                                    "IP": "",
                                    "MBits": 100,
                                    "ReservedPorts": null,
                                    "DynamicPorts": [
                                        {
                                            "Label": "webui",
                                            "Value": 0
                                        }
                                    ]
                                }
                            ]
                        },
                        "Meta": null,
                        "KillTimeout": null,
                        "LogConfig": null,
                        "Artifacts": null,
                        "Vault": {
                            "Policies": [
                                "locus_aws_creds_spark_nomad",
                                "locus_spark_nomad_app"
                            ],
                            "Env": true,
                            "ChangeMode": "restart",
                            "ChangeSignal": null
                        },
                        "Templates": [
                            {
                                "SourcePath": null,
                                "DestPath": "alloc/shiro.ini.template",
                                "EmbeddedTmpl": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n[users]\n# List of users with their password allowed to access Zeppelin.\n# To use a different strategy (LDAP / Database / ...) check the shiro doc at http://shiro.apache.org/configuration.html#Configuration-INISections\n# To enable admin user, uncomment the following line and set an appropriate password.\nadmin = password1, admin\nuser1 = password2, role1, role2\nuser2 = password3, role3\nuser3 = password4, role2\n\n# Sample LDAP configuration, for user Authentication, currently tested for single Realm\n[main]\n### A sample for configuring Active Directory Realm\n#activeDirectoryRealm = org.apache.zeppelin.realm.ActiveDirectoryGroupRealm\n#activeDirectoryRealm.systemUsername = userNameA\n\n#use either systemPassword or hadoopSecurityCredentialPath, more details in http://zeppelin.apache.org/docs/latest/security/shiroauthentication.html\n#activeDirectoryRealm.systemPassword = passwordA\n#activeDirectoryRealm.hadoopSecurityCredentialPath = jceks://file/user/zeppelin/zeppelin.jceks\n#activeDirectoryRealm.searchBase = CN=Users,DC=SOME_GROUP,DC=COMPANY,DC=COM\n#activeDirectoryRealm.url = ldap://ldap.test.com:389\n#activeDirectoryRealm.groupRolesMap = \"CN=admin,OU=groups,DC=SOME_GROUP,DC=COMPANY,DC=COM\":\"admin\",\"CN=finance,OU=groups,DC=SOME_GROUP,DC=COMPANY,DC=COM\":\"finance\",\"CN=hr,OU=groups,DC=SOME_GROUP,DC=COMPANY,DC=COM\":\"hr\"\n#activeDirectoryRealm.authorizationCachingEnabled = false\n\n### A sample for configuring LDAP Directory Realm\n#ldapRealm = org.apache.zeppelin.realm.LdapGroupRealm\n## search base for ldap groups (only relevant for LdapGroupRealm):\n#ldapRealm.contextFactory.environment[ldap.searchBase] = dc=COMPANY,dc=COM\n#ldapRealm.contextFactory.url = ldap://ldap.test.com:389\n#ldapRealm.userDnTemplate = uid={0},ou=Users,dc=COMPANY,dc=COM\n#ldapRealm.contextFactory.authenticationMechanism = simple\n\n### A sample PAM configuration\n#pamRealm=org.apache.zeppelin.realm.PamRealm\n#pamRealm.service=sshd\n\n### A sample for configuring ZeppelinHub Realm\n#zeppelinHubRealm = org.apache.zeppelin.realm.ZeppelinHubRealm\n## Url of ZeppelinHub\n#zeppelinHubRealm.zeppelinhubUrl = https://www.zeppelinhub.com\n#securityManager.realms = $zeppelinHubRealm\n\n## A same for configuring Knox SSO Realm\n#knoxJwtRealm = org.apache.zeppelin.realm.jwt.KnoxJwtRealm\n#knoxJwtRealm.providerUrl = https://domain.example.com/\n#knoxJwtRealm.login = gateway/knoxsso/knoxauth/login.html\n#knoxJwtRealm.logout = gateway/knoxssout/api/v1/webssout\n#knoxJwtRealm.logoutAPI = true\n#knoxJwtRealm.redirectParam = originalUrl\n#knoxJwtRealm.cookieName = hadoop-jwt\n#knoxJwtRealm.publicKeyPath = /etc/zeppelin/conf/knox-sso.pem\n#\n#knoxJwtRealm.groupPrincipalMapping = group.principal.mapping\n#knoxJwtRealm.principalMapping = principal.mapping\n#authc = org.apache.zeppelin.realm.jwt.KnoxAuthenticationFilter\n\nsessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager\n\n### If caching of user is required then uncomment below lines\n#cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager\n#securityManager.cacheManager = $cacheManager\n\n### Enables 'HttpOnly' flag in Zeppelin cookies\ncookie = org.apache.shiro.web.servlet.SimpleCookie\ncookie.name = JSESSIONID\ncookie.httpOnly = true\n### Uncomment the below line only when Zeppelin is running over HTTPS\n#cookie.secure = true\nsessionManager.sessionIdCookie = $cookie\n\nsecurityManager.sessionManager = $sessionManager\n# 86,400,000 milliseconds = 24 hour\nsecurityManager.sessionManager.globalSessionTimeout = 86400000\nshiro.loginUrl = /api/login\n\n[roles]\nrole1 = *\nrole2 = *\nrole3 = *\nadmin = *\n\n[urls]\n# This section is used for url-based security. For details see the shiro.ini documentation.\n#\n# You can secure interpreter, configuration and credential information by urls.\n# Comment or uncomment the below urls that you want to hide:\n# anon means the access is anonymous.\n# authc means form based auth Security.\n#\n# IMPORTANT: Order matters: URL path expressions are evaluated against an incoming request\n# in the order they are defined and the FIRST MATCH WINS.\n#\n# To allow anonymous access to all but the stated urls,\n# uncomment the line second last line (/** = anon) and comment the last line (/** = authc)\n#\n/api/version = anon\n# Allow all authenticated users to restart interpreters on a notebook page.\n# Comment out the following line if you would like to authorize only admin users to restart interpreters.\n/api/interpreter/setting/restart/** = authc\n/api/interpreter/** = authc, roles[admin]\n/api/configurations/** = authc, roles[admin]\n/api/credential/** = authc, roles[admin]\n#/** = anon\n/** = authc\n\n",
                                "ChangeMode": "restart",
                                "ChangeSignal": null,
                                "Splay": 5000000000,
                                "Perms": "0644",
                                "LeftDelim": null,
                                "RightDelim": null,
                                "Envvars": null,
                                "VaultGrace": null
                            },
                            {
                                "SourcePath": null,
                                "DestPath": "alloc/spark-defaults.conf",
                                "EmbeddedTmpl": "spark.hadoop.fs.s3.impl                                org.apache.hadoop.fs.s3a.S3AFileSystem\nspark.hadoop.fs.s3a.impl                               org.apache.hadoop.fs.s3a.S3AFileSystem\nspark.hadoop.fs.s3a.server-side-encryption-algorithm   SSE-KMS\nspark.hadoop.fs.s3a.server-side-encryption.key         {{ key \"terraform/spark_nomad/kms_alias_aws_s3_key_path\" }}\n\n# Need to be set on Spark master, workers and drivers\nspark.ui.reverseProxy                              true\nspark.ui.reverseProxyUrl                           https://sm.locus.rocks\n\nspark.driver.bindAddress                           0.0.0.0\nspark.driver.host                                  {{ with node }}{{ .Node.Address }}{{ end }}\n\nspark.cores.max                                    {{ key \"terraform/spark_nomad/cores_max_path\" }}\nspark.default.parallelism                          {{ key \"terraform/spark_nomad/default_parallelism_path\" }}\n\nspark.sql.catalogImplementation                    {{ key \"terraform/spark_nomad/sql_catalog_implementation\" }}\nspark.sql.warehouse.dir                            {{ key \"terraform/spark_nomad/hive_metastore_s3_warehouse\" }}\n\nspark.port.maxRetries                              {{ key \"terraform/spark_nomad/port_max_retries\" }}\n\nspark.shuffle.service.enabled                      {{ key \"terraform/spark_nomad/shuffle_service_enabled\" }}\n\nspark.dynamicAllocation.enabled                    {{ key \"terraform/spark_nomad/dynamic_allocation_enabled\" }}\nspark.dynamicAllocation.initialExecutors           {{ key \"terraform/spark_nomad/dynamic_allocation_initial_executors\" }}\nspark.dynamicAllocation.minExecutors               {{ key \"terraform/spark_nomad/dynamic_allocation_min_executors\" }}\nspark.dynamicAllocation.maxExecutors               {{ key \"terraform/spark_nomad/dynamic_allocation_max_executors\" }}\nspark.dynamicAllocation.executorIdleTimeout        {{ key \"terraform/spark_nomad/dynamic_allocation_executor_idle_timeout\" }}\nspark.dynamicAllocation.cachedExecutorIdleTimeout  {{ key \"terraform/spark_nomad/dynamic_allocation_cached_executor_idle_timeout\" }}\n\nspark.executor.instances                           {{ key \"terraform/spark_nomad/executor_instances\" }}\nspark.executor.cores                               {{ key \"terraform/spark_nomad/executor_cores\" }}\nspark.executor.memory                              {{ key \"terraform/spark_nomad/executor_memory\" }}\n\n",
                                "ChangeMode": "restart",
                                "ChangeSignal": null,
                                "Splay": 5000000000,
                                "Perms": "0644",
                                "LeftDelim": null,
                                "RightDelim": null,
                                "Envvars": null,
                                "VaultGrace": null
                            },
                            {
                                "SourcePath": null,
                                "DestPath": "secrets/hive-site.xml",
                                "EmbeddedTmpl": "\u003c?xml version=\"1.0\"?\u003e\n\u003cconfiguration\u003e\n\n\u003cproperty\u003e\n  \u003cname\u003ehive.metastore.pre.event.listeners\u003c/name\u003e\n  \u003cvalue\u003e\u003c/value\u003e\n\u003c/property\u003e\n\u003cproperty\u003e\n  \u003cname\u003ehive.metastore.warehouse.dir\u003c/name\u003e\n  \u003cvalue\u003e{{ key \"terraform/spark_nomad/hive_metastore_s3_warehouse\" }}\u003c/value\u003e\n\u003c/property\u003e\n\u003cproperty\u003e\n  \u003cname\u003ehive.mv.files.thread\u003c/name\u003e\n  \u003cvalue\u003e15\u003c/value\u003e\n\u003c/property\u003e\n\u003cproperty\u003e\n  \u003cname\u003ehive.warehouse.subdir.inherit.perms\u003c/name\u003e\n  \u003cvalue\u003efalse\u003c/value\u003e\n\u003c/property\u003e\n\u003cproperty\u003e\n  \u003cname\u003ejavax.jdo.option.ConnectionURL\u003c/name\u003e\n  \u003cvalue\u003e{{ key \"terraform/spark_nomad/hive_site_conf_db_connection_url\" }}\u003c/value\u003e\n\u003c/property\u003e\n\u003cproperty\u003e\n  \u003cname\u003ejavax.jdo.option.ConnectionDriverName\u003c/name\u003e\n  \u003cvalue\u003eorg.mariadb.jdbc.Driver\u003c/value\u003e\n\u003c/property\u003e\n{{ with secret \"locus/app/spark_nomad\" }}\n\u003cproperty\u003e\n  \u003cname\u003ejavax.jdo.option.ConnectionUserName\u003c/name\u003e\n  \u003cvalue\u003e{{ .Data.hive_metastore_user }}\u003c/value\u003e\n\u003c/property\u003e\n\u003cproperty\u003e\n  \u003cname\u003ejavax.jdo.option.ConnectionPassword\u003c/name\u003e\n  \u003cvalue\u003e{{ .Data.hive_metastore_password }}\u003c/value\u003e\n\u003c/property\u003e\n{{ end }}\n\n\u003c/configuration\u003e\n\n",
                                "ChangeMode": "restart",
                                "ChangeSignal": null,
                                "Splay": 5000000000,
                                "Perms": "0644",
                                "LeftDelim": null,
                                "RightDelim": null,
                                "Envvars": null,
                                "VaultGrace": null
                            },
                            {
                                "SourcePath": null,
                                "DestPath": "secrets/env",
                                "EmbeddedTmpl": "{{ with secret \"locus_aws/creds/spark_nomad\" }}\nAWS_ACCESS_KEY_ID=\"{{ .Data.access_key }}\"\nAWS_SECRET_ACCESS_KEY=\"{{ .Data.secret_key }}\"\nAWS_DEFAULT_REGION=\"ap-southeast-1\"\n{{ end }}\n\nPORT=\"{{ env \"NOMAD_HOST_PORT_webui\" }}\"\nNOMAD_TOKEN=\"{{ with secret \"locus_nomad/creds/spark_nomad\" }}{{ .Data.secret_id }}{{ end }}\"\nSPARK_MASTER=\"spark://{{ with service \"spark-master\" }}{{ with index . 0 }}{{ .Address }}:{{ .Port }}{{ end }}{{ end }}\"\n",
                                "ChangeMode": "restart",
                                "ChangeSignal": null,
                                "Splay": 5000000000,
                                "Perms": "0644",
                                "LeftDelim": null,
                                "RightDelim": null,
                                "Envvars": true,
                                "VaultGrace": null
                            }
                        ],
                        "DispatchPayload": null,
                        "Leader": false,
                        "ShutdownDelay": 0,
                        "KillSignal": ""
                    }
                ],
                "RestartPolicy": null,
                "ReschedulePolicy": null,
                "EphemeralDisk": null,
                "Update": null,
                "Migrate": null,
                "Meta": null
            }
        ],
        "Update": {
            "Stagger": null,
            "MaxParallel": 1,
            "HealthCheck": null,
            "MinHealthyTime": null,
            "HealthyDeadline": null,
            "ProgressDeadline": null,
            "AutoRevert": true,
            "Canary": null
        },
        "Periodic": null,
        "ParameterizedJob": null,
        "Dispatched": false,
        "Payload": null,
        "Reschedule": null,
        "Migrate": null,
        "Meta": null,
        "VaultToken": null,
        "Status": null,
        "StatusDescription": null,
        "Stable": null,
        "Version": null,
        "SubmitTime": null,
        "CreateIndex": null,
        "ModifyIndex": null,
        "JobModifyIndex": null
    }
}
